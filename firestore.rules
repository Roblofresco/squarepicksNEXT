rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- users Collection ---
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;

      match /address/{document} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }
      match /bets/{document} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }
      match /wallet/{document} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }
      match /wins/{winId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create, update, delete: if false;
      }
    }

    // --- games Collection ---
    match /games/{gameDocId} {
      allow read: if true;
      allow create, update, delete: if false;
    }

    // --- sports Collection ---
    match /sports/{sportDocId} {
      allow read: if true;
      allow create, update, delete: if false;
    }

    // --- teams Collection ---
    match /teams/{teamDocId} {
      allow read: if true;
      allow create, update, delete: if false;
    }

    // --- boards Collection ---
    match /boards/{boardId} {
      allow read: if resource.data.status == "open" || request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if false;

      match /squares/{squareId} {
        allow read: if request.auth != null && (
          resource.data.userID == request.auth.uid ||
          (resource.data.userID is string && (
            resource.data.userID == request.auth.uid ||
            resource.data.userID == ('users/' + request.auth.uid)
          )) ||
          (resource.data.userID is map && resource.data.userID.id == request.auth.uid) ||
          (resource.data.userID is path && resource.data.userID == path("/databases/$(database)/documents/users/$(request.auth.uid)"))
        );
        allow create, update, delete: if false;
      }

      match /winners/{periodId} {
        allow read: if true;
        allow create, update, delete: if false;
      }
    }

    // --- sweepstakes Collection ---
    match /sweepstakes/{sweepstakeDocId} {
      allow read: if true;
      allow create, update, delete: if false;

      match /participants/{participantId} {
        allow create: if request.auth != null &&
                       request.resource.data.userID == request.auth.uid;
        allow read: if request.auth != null;
        allow update, delete: if false;
      }
    }

    // --- transactions Collection ---
    match /transactions/{transactionId} {
      allow read: if request.auth != null && resource.data.userID == request.auth.uid;
      allow create, update, delete: if false;
    }
    
    // --- notifications Collection ---
    match /notifications/{notificationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userID;
      allow update: if request.auth != null &&
                     request.auth.uid == resource.data.userID &&
                     request.writeFields.hasOnly(['isRead']) &&
                     request.resource.data.isRead == true;
      allow create, delete: if false;
    }
  }
} 